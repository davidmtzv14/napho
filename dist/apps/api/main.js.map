{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///external \"typeorm\"","webpack:///./libs/data/src/index.ts","webpack:///./apps/api/src/app/photos/data/photo.entity.ts","webpack:///external \"class-validator\"","webpack:///external \"@nestjs/passport\"","webpack:///./apps/api/src/app/users/data/user.repository.ts","webpack:///./apps/api/src/environments/environment.prod.ts","webpack:///./apps/api/src/app/comments/data/comment.entity.ts","webpack:///./apps/api/src/app/users/data/user.entity.ts","webpack:///external \"@angular/core\"","webpack:///./apps/api/src/app/photos/data/tag.entity.ts","webpack:///./apps/api/src/app/photos/data/photo.repository.ts","webpack:///./apps/api/src/app/auth/decorators/get-user.decorator.ts","webpack:///external \"@nestjs/typeorm\"","webpack:///./apps/api/src/app/auth/auth.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/comments/services/comments.service.ts","webpack:///external \"@angular/common\"","webpack:///./apps/api/src/app/comments/data/comment.repository.ts","webpack:///external \"bcryptjs\"","webpack:///./apps/api/src/app/auth/services/auth.service.ts","webpack:///external \"@nestjs/jwt\"","webpack:///./apps/api/src/app/users/services/users.service.ts","webpack:///./apps/api/src/app/photos/services/photos.service.ts","webpack:///./apps/api/src/main.ts","webpack:///external \"@nestjs/core\"","webpack:///external \"body-parser\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/comments/comments.module.ts","webpack:///./apps/api/src/app/comments/controllers/comments.controller.ts","webpack:///./libs/data/src/lib/data.module.ts","webpack:///./libs/data/src/lib/users/index.ts","webpack:///./libs/data/src/lib/users/models/index.ts","webpack:///./libs/data/src/lib/users/users.module.ts","webpack:///./libs/data/src/lib/photos/index.ts","webpack:///./libs/data/src/lib/photos/models/index.ts","webpack:///./libs/data/src/lib/comments/index.ts","webpack:///./libs/data/src/lib/comments/models/index.ts","webpack:///./libs/data/src/lib/comments/models/comment.model.ts","webpack:///./libs/data/src/lib/data.config.ts","webpack:///./apps/api/src/app/comments/dto/create-comment.dto.ts","webpack:///./apps/api/src/app/comments/dto/get-comments-filter.dto.ts","webpack:///./apps/api/src/app/comments/pipes/comment-status-validation.pipe.ts","webpack:///./apps/api/src/app/auth/controllers/auth.controller.ts","webpack:///./apps/api/src/app/auth/dto/auth-credentials.dto.ts","webpack:///./apps/api/src/app/auth/services/jwt.strategy.ts","webpack:///external \"passport-jwt\"","webpack:///./apps/api/src/app/users/controllers/users.controller.ts","webpack:///./apps/api/src/config/typeorm.config.ts","webpack:///./apps/api/src/app/photos/photos.module.ts","webpack:///./apps/api/src/app/photos/controllers/photos.controller.ts","webpack:///./apps/api/src/app/photos/dto/get-photos-filter.dto.ts","webpack:///./apps/api/src/app/photos/dto/create-photo.dto.ts","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"typeorm\");","export * from './lib/data.module';\nexport * from './lib/users';\nexport * from './lib/photos'\nexport * from './lib/comments'\nexport * from './lib/data.config'\n","import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  OneToMany,\n  ManyToMany,\n  JoinColumn\n} from 'typeorm';\nimport { User, Photo, Comment } from '@napho/data';\nimport { UserEntity } from '../../users/data/user.entity';\nimport { CommentEntity } from '../../comments/data/comment.entity';\nimport { TagEntity } from './tag.entity';\n\n@Entity('photos')\nexport class PhotoEntity extends BaseEntity implements Photo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  imageUrl: string;\n\n  @Column()\n  description: string;\n\n  @OneToMany(\n    type => CommentEntity,\n    comment => comment.photo,\n    { eager: true, cascade: true }\n  )\n  comments: Partial<Comment[]>;\n\n  @ManyToOne(\n    type => UserEntity,\n    user => user.photos,\n    { eager: false }\n  )\n  user: Partial<User>;\n\n  @Column()\n  userId: number;\n\n  @ManyToMany(\n    type => UserEntity,\n    user => user.favPhotos\n  )\n  favoriteOf: Partial<User>[];\n\n  @OneToMany(\n    type => TagEntity,\n    tag => tag.photo,\n    { eager: true, cascade: true }\n  )\n  @JoinColumn()\n  tags: TagEntity[];\n}\n","module.exports = require(\"class-validator\");","module.exports = require(\"@nestjs/passport\");","import { EntityRepository, Repository } from 'typeorm';\n\nimport { UserEntity } from './user.entity';\nimport { SignUpCredentialsDto } from '../../auth/dto/auth-credentials.dto';\nimport {\n  ConflictException,\n  InternalServerErrorException\n} from '@nestjs/common';\nimport * as bcrypt from 'bcryptjs';\nimport { User } from '@napho/data';\n\n@EntityRepository(UserEntity)\nexport class UserRepository extends Repository<UserEntity> {\n  async signUp(signUpCredentialsDto: SignUpCredentialsDto): Promise<User> {\n    const {\n      username,\n      password,\n      email,\n      firstName,\n      lastName,\n      gender\n    } = signUpCredentialsDto;\n\n    const user = new UserEntity();\n    user.username = username;\n    user.email = email;\n    user.firstName = firstName;\n    user.lastName = lastName;\n    user.gender = gender;\n    user.salt = await bcrypt.genSalt();\n    user.password = await this.hashPassword(password, user.salt);\n\n    try {\n      await user.save();\n    } catch (error) {\n      if (error.code === '23505') {\n        throw new ConflictException('Username already exists');\n      } else {\n        throw new InternalServerErrorException();\n      }\n    }\n    return user;\n  }\n\n  async getSearchUsers(search: string): Promise<UserEntity[]> {\n    const query = this.createQueryBuilder('user');\n\n    if (search) {\n      query.where(\n        '(user.username LIKE :search OR user.firstName LIKE :search OR user.lastName LIKE :search OR user.description LIKE :search)',\n        { search: `%${search}%` }\n      );\n    }\n\n    const users = await query.getMany();\n\n    return users;\n  }\n\n  async getUserFollowers(id: number): Promise<UserEntity[]> {\n    const query = this.createQueryBuilder('user');\n\n    query\n      .leftJoinAndSelect('user.following', 'following')\n      .where('following.id = :userId', { userId: id });\n\n    const users = await query.getMany();\n\n    return users;\n  }\n\n  async getUserFollowing(id: number): Promise<Partial<User>[]> {\n    const query = this.createQueryBuilder('user');\n\n    query\n      .where('user.id = :userId', { userId: id })\n      .leftJoinAndSelect('user.following', 'following');\n\n    const user = await query.getOne();\n\n    return user.following;\n  }\n\n  async followUser(user: Partial<User>, id: number): Promise<UserEntity> {\n    const query = this.createQueryBuilder('user');\n\n    query\n      .where('user.id = :userId', { userId: user.id })\n      .leftJoinAndSelect('user.following', 'following');\n\n    const userEntity = await query.getOne();\n    const followingUser = await this.findOne(id);\n\n    let found = false;\n    for (let i = 0; i < userEntity.following.length; i++) {\n      if (userEntity.following[i].id === followingUser.id) {\n        found = true;\n        break;\n      }\n    }\n\n    if (found) {\n      userEntity.following = userEntity.following.filter(\n        following => following.id !== followingUser.id\n      );\n    } else {\n      userEntity.following.push(followingUser);\n    }\n    await userEntity.save();\n\n    return followingUser;\n  }\n\n  private async hashPassword(password: string, salt: string): Promise<string> {\n    return bcrypt.hash(password, salt);\n  }\n}\n","export const environment = {\n  production: true,\n  databaseConfig: {\n    type: 'postgres',\n    host: 'localhost',\n    port: 5432,\n    database: 'napho_dev',\n    username: 'davidmartinez',\n    password: 'postgres',\n    synchronize: true\n  },\n  server: {\n    port: 3333\n  },\n  jwt: {\n    secret: 'pqowieurytlaksjdhf',\n    expiresIn: 86400\n  }\n};\n","import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne\n} from 'typeorm';\nimport { CommentStatus, Comment, Photo, User } from '@napho/data';\nimport { PhotoEntity } from '../../photos/data/photo.entity';\nimport { UserEntity } from '@api/users/data/user.entity';\n\n@Entity('comments')\nexport class CommentEntity extends BaseEntity implements Comment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(\n    type => PhotoEntity,\n    photo => photo.comments,\n    { eager: false }\n  )\n  photo: Partial<Photo>;\n\n  @Column()\n  photoId: number;\n\n  @Column()\n  content: string;\n\n  @Column({ type: 'enum', enum: CommentStatus })\n  status: CommentStatus;\n\n  @ManyToOne(type => UserEntity)\n  user: Partial<User>;\n\n  @Column()\n  username: string;\n}\n","import { User, Photo } from '@napho/data';\nimport {\n  BaseEntity,\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  OneToMany,\n  ManyToMany,\n  JoinTable\n} from 'typeorm';\nimport * as bcrypt from 'bcryptjs';\nimport { PhotoEntity } from '../../photos/data/photo.entity';\n\n@Entity('users')\n@Unique(['username', 'email'])\nexport class UserEntity extends BaseEntity implements User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ unique: true })\n  username: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  salt: string;\n\n  @Column({ nullable: true })\n  gender: string;\n\n  @Column({ nullable: true })\n  birthDate: Date;\n\n  @Column({ nullable: true })\n  phone: string;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @Column({ nullable: true })\n  profileImgUrl: string;\n\n  @OneToMany(\n    type => PhotoEntity,\n    photo => photo.user,\n    { eager: true }\n  )\n  photos: Photo[];\n\n  @ManyToMany(\n    type => PhotoEntity,\n    photo => photo.favoriteOf\n  )\n  @JoinTable()\n  favPhotos: Photo[];\n\n  @ManyToMany(type => UserEntity, { cascade: true })\n  @JoinTable({\n    joinColumns: [{ name: 'followerId' }],\n    inverseJoinColumns: [{ name: 'followingId' }]\n  })\n  following: Partial<User>[];\n\n  async validatePassword(password: string): Promise<boolean> {\n    const hash = await bcrypt.hash(password, this.salt);\n    return hash === this.password;\n  }\n}\n","module.exports = require(\"@angular/core\");","import {\n  Entity,\n  BaseEntity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne\n} from 'typeorm';\nimport { Photo,Tag } from '@napho/data';\nimport { PhotoEntity } from './photo.entity';\n\n@Entity('tags')\nexport class TagEntity extends BaseEntity implements Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  content: string;\n\n  @ManyToOne(\n    type => PhotoEntity,\n    photo => photo.tags,\n    { eager: false }\n  )\n  photo: Photo;\n\n  @Column()\n  photoId: number;\n}\n","import { Repository, EntityRepository } from 'typeorm';\nimport { PhotoEntity } from './photo.entity';\nimport { GetPhotosFilterDto } from '../dto/get-photos-filter.dto';\nimport { CreatePhotoDto } from '../dto/create-photo.dto';\nimport { User } from '@napho/data';\nimport { TagEntity } from './tag.entity';\nimport { UserRepository } from '@api/users/data/user.repository';\n\n@EntityRepository(PhotoEntity)\nexport class PhotoRepository extends Repository<PhotoEntity> {\n\n  async createPhoto(\n    createPhotoDto: CreatePhotoDto,\n    user: Partial<User>\n  ): Promise<PhotoEntity> {\n    const { description, tags, imageUrl } = createPhotoDto;\n    const photoTags: TagEntity[] = [];\n\n    const photo = new PhotoEntity();\n    photo.description = description;\n    photo.imageUrl = imageUrl;\n    photo.user = user;\n    photo.userId = user.id;\n    tags.forEach(tag => {\n      const photoTag = new TagEntity();\n      photoTag.content = tag;\n      photoTag.photoId = photo.id;\n      photoTags.push(photoTag);\n    });\n    photo.tags = photoTags;\n    await photo.save();\n\n    return photo;\n  }\n}\n","import { createParamDecorator ,ExecutionContext} from '@nestjs/common'\nimport { UserEntity } from '../../users/data/user.entity';\n\nexport const GetUser = createParamDecorator((data, req): UserEntity => {\n  return req.user;\n});\n\n","module.exports = require(\"@nestjs/typeorm\");","import { AuthController } from './controllers/auth.controller';\nimport { AuthService } from './services/auth.service';\nimport { UsersModule } from '@napho/data';\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './services/jwt.strategy';\nimport { environment } from '@env/environment';\nimport { UserRepository } from '@api/users/data/user.repository';\nimport { UsersController } from '@api/users/controllers/users.controller';\nimport { UsersService } from '@api/users/services/users.service';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET || environment.jwt.secret,\n      signOptions: { expiresIn: environment.jwt.expiresIn }\n    }),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    UsersModule\n  ],\n  controllers: [AuthController, UsersController],\n  providers: [AuthService, JwtStrategy, UserRepository, UsersService],\n  exports: [JwtStrategy, PassportModule]\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData() {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CommentStatus, User } from '@napho/data';\nimport { CreateCommentDto } from '../dto/create-comment.dto';\nimport { GetCommentsFilterDto } from '../dto/get-comments-filter.dto';\nimport { CommentRepository } from '../data/comment.repository';\nimport { CommentEntity } from '../data/comment.entity';\nimport { PhotoRepository } from '@api/photos/data/photo.repository';\nimport { Connection } from 'typeorm';\n\n@Injectable()\nexport class CommentsService {\n  private commentRepository: CommentRepository;\n  private photoRepository: PhotoRepository;\n\n  constructor(private readonly connection: Connection) {\n    this.commentRepository = this.connection.getCustomRepository(\n      CommentRepository\n    );\n    this.photoRepository = this.connection.getCustomRepository(PhotoRepository);\n  }\n\n  async getComments(filterDto: GetCommentsFilterDto): Promise<CommentEntity[]> {\n    return this.commentRepository.getComments(filterDto);\n  }\n\n  async getCommentById(id: number): Promise<CommentEntity> {\n    const found = await this.commentRepository.findOne(id);\n\n    if (!found) {\n      throw new NotFoundException(`Comment with ID \"${id}\" not found`);\n    }\n\n    return found;\n  }\n\n  async createComment(\n    photoId: number,\n    createCommentDto: CreateCommentDto,\n    user: Partial<User>\n  ): Promise<CommentEntity> {\n    const { content } = createCommentDto;\n    const photo = await this.photoRepository.findOne({ id: photoId });\n\n    const comment = new CommentEntity();\n    comment.content = content;\n    comment.photoId = photoId;\n    comment.status = CommentStatus.pending;\n    comment.user = user;\n    comment.username = user.username\n\n    photo.comments.push(comment);\n    await photo.save();\n\n    return comment;\n  }\n\n  async deleteComment(id: number): Promise<void> {\n    const result = await this.commentRepository.delete(id);\n\n    if (!result.affected) {\n      throw new NotFoundException(`Comment with ID \"${id}\" not found`);\n    }\n  }\n\n  async updateCommentStatus(\n    id: number,\n    status: CommentStatus\n  ): Promise<CommentEntity> {\n    const comment = await this.getCommentById(id);\n    comment.status = status;\n    await comment.save();\n    return comment;\n  }\n}\n","module.exports = require(\"@angular/common\");","import { Repository, EntityRepository } from 'typeorm';\nimport { CommentEntity } from './comment.entity';\nimport { CreateCommentDto } from '../dto/create-comment.dto';\nimport { CommentStatus } from '@napho/data';\nimport { GetCommentsFilterDto } from '../dto/get-comments-filter.dto';\n\n@EntityRepository(CommentEntity)\nexport class CommentRepository extends Repository<CommentEntity> {\n  async getComments(filterDto: GetCommentsFilterDto): Promise<CommentEntity[]> {\n    const { status, search } = filterDto;\n    const query = this.createQueryBuilder('comment');\n\n    if (status) {\n      query.andWhere('comment.status = :status', { status });\n    }\n\n    if (search) {\n      query.andWhere('comment.content LIKE :search', { search: `%${search}%` });\n    }\n\n    const comments = await query.getMany();\n\n    return comments;\n  }\n}\n","module.exports = require(\"bcryptjs\");","import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  AuthCredentialsDto,\n  SignUpCredentialsDto\n} from '../dto/auth-credentials.dto';\nimport { UserRepository } from '../../users/data/user.repository';\nimport { User } from '@napho/data';\nimport { Connection } from 'typeorm';\n\n@Injectable()\nexport class AuthService {\n  private userRepository: UserRepository;\n  constructor(\n    private jwtService: JwtService,\n    private readonly connection: Connection\n  ) {\n    this.userRepository = this.connection.getCustomRepository(UserRepository);\n  }\n\n  async signUp(signUpCredentialsDto: SignUpCredentialsDto): Promise<User> {\n    return this.userRepository.signUp(signUpCredentialsDto);\n  }\n\n  async signIn(authCredentialsDto: AuthCredentialsDto): Promise<User> {\n    const user = await this.validateUserPassword(authCredentialsDto);\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const { photos, favPhotos, following, ...payload } = user;\n    // const payload = { user };\n    const token = await this.jwtService.sign(payload);\n\n    return { ...user, token };\n  }\n\n  async validateUserPassword(\n    authCredentialsDto: AuthCredentialsDto\n  ): Promise<User> {\n    const { email, password } = authCredentialsDto;\n    const user = await this.userRepository.findOne({\n      where: [{ email }]\n    });\n\n    if (user && (await user.validatePassword(password))) {\n      return user;\n    } else {\n      return null;\n    }\n  }\n}\n","module.exports = require(\"@nestjs/jwt\");","import { Injectable, NotFoundException } from '@nestjs/common';\nimport { UserRepository } from '../data/user.repository';\nimport { UserEntity } from '../data/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { User } from '@napho/data';\n\n@Injectable()\nexport class UsersService {\n  private userRepository: UserRepository;\n\n  constructor(private readonly connection: Connection) {\n    this.userRepository = this.connection.getCustomRepository(UserRepository);\n  }\n\n  async getSearchUsers(search: string): Promise<UserEntity[]> {\n    return this.userRepository.getSearchUsers(search);\n  }\n\n  async getUserById(id: number): Promise<UserEntity> {\n    const found = await this.userRepository.findOne({\n      where: { id }\n    });\n\n    if (!found) {\n      throw new NotFoundException(`User with ID \"${id}\" not found`);\n    }\n\n    return found;\n  }\n\n  async getUserFollowers(id: number): Promise<UserEntity[]> {\n    return this.userRepository.getUserFollowers(id);\n  }\n\n  async getUserFollowing(id: number): Promise<Partial<User>[]> {\n    return this.userRepository.getUserFollowing(id);\n  }\n\n  async followUser(user: Partial<User>, id: number): Promise<UserEntity> {\n    return this.userRepository.followUser(user, id);\n  }\n\n  async updateUser(\n    user: Partial<User>,\n    userBody: Partial<User>\n  ): Promise<UserEntity> {\n    const userEntity = await this.getUserById(user.id);\n\n    userEntity.firstName = userBody.firstName;\n    userEntity.lastName = userBody.lastName;\n    userEntity.gender = userBody.gender;\n    userEntity.username = userBody.username;\n    userEntity.description = userBody.description;\n    userEntity.profileImgUrl = userBody.profileImgUrl;\n\n    await userEntity.save();\n\n    return userEntity;\n  }\n}\n","import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PhotoRepository } from '../data/photo.repository';\nimport { PhotoEntity } from '../data/photo.entity';\nimport { User } from '@napho/data';\nimport { GetPhotosFilterDto } from '../dto/get-photos-filter.dto';\nimport { CreatePhotoDto } from '../dto/create-photo.dto';\nimport { Connection } from 'typeorm';\nimport { UserRepository } from '@api/users/data/user.repository';\n\n@Injectable()\nexport class PhotosService {\n  private photoRepository: PhotoRepository;\n  private userRepository: UserRepository;\n\n  constructor(private readonly connection: Connection) {\n    this.photoRepository = this.connection.getCustomRepository(PhotoRepository);\n    this.userRepository = this.connection.getCustomRepository(UserRepository);\n  }\n\n  async getUserPhotos(id: number, user: Partial<User>): Promise<PhotoEntity[]> {\n    const query = this.photoRepository.createQueryBuilder('photo');\n    const userQuery = this.userRepository.createQueryBuilder('user');\n    userQuery\n      .where('user.id = :userId', { userId: user.id })\n      .leftJoinAndSelect('user.favPhotos', 'favPhotos');\n\n    const userEntity = await userQuery.getOne();\n\n    query.andWhere('photo.userId = :userId', { userId: id });\n\n    let photos = await query\n      .leftJoinAndSelect('photo.user', 'user')\n      .leftJoinAndSelect('photo.comments', 'comment')\n      .leftJoinAndSelect('photo.tags', 'tag')\n      .leftJoinAndSelect('photo.favoriteOf', 'favoriteOf')\n      .getMany();\n\n    photos = photos.map(photo => {\n      let found = false;\n      for (let i = 0; i < userEntity.favPhotos.length; i++) {\n        if (userEntity.favPhotos[i].id === photo.id) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found) {\n        photo['favorite'] = true;\n      } else {\n        photo['favorite'] = false;\n      }\n      return photo;\n    });\n\n    return photos;\n  }\n\n  async getUserFavPhotos(\n    id: number,\n    user: Partial<User>\n  ): Promise<PhotoEntity[]> {\n    const query = this.photoRepository.createQueryBuilder('photo');\n    const userQuery = this.userRepository.createQueryBuilder('user');\n    userQuery\n      .where('user.id = :userId', { userId: user.id })\n      .leftJoinAndSelect('user.favPhotos', 'favPhotos');\n\n    const userEntity = await userQuery.getOne();\n    const favPhotos = userEntity.favPhotos.map(favPhoto => favPhoto.id);\n\n    let photos = await query\n      .leftJoinAndSelect('photo.user', 'user')\n      .leftJoinAndSelect('photo.comments', 'comment')\n      .leftJoinAndSelect('photo.tags', 'tag')\n      .leftJoinAndSelect('photo.favoriteOf', 'favoriteOf')\n      .getMany();\n\n    photos = photos.filter(photo => {\n      if (favPhotos.includes(photo.id)) {\n        return photo;\n      }\n    });\n\n    photos = photos.filter(photo => {\n      const favoriteOf = photo.favoriteOf.map(favOf => favOf.id);\n      if (favoriteOf.includes(id)) {\n        return photo;\n      }\n    });\n\n    photos = photos.map(photo => {\n      let found = false;\n      for (let i = 0; i < userEntity.favPhotos.length; i++) {\n        if (userEntity.favPhotos[i].id === photo.id) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found) {\n        photo['favorite'] = true;\n      } else {\n        photo['favorite'] = false;\n      }\n      return photo;\n    });\n\n    return photos;\n  }\n\n  async getFeedPhotos(user: Partial<User>): Promise<PhotoEntity[]> {\n    const photoQuery = this.photoRepository.createQueryBuilder('photo');\n    const userQuery = this.userRepository.createQueryBuilder('user');\n\n    userQuery\n      .where('user.id = :userId', { userId: user.id })\n      .leftJoinAndSelect('user.following', 'following')\n      .leftJoinAndSelect('user.favPhotos', 'favPhotos');\n\n    const userEntity = await userQuery.getOne();\n\n    const following = userEntity.following.map(follow => follow.id);\n\n    let photos = await photoQuery\n      .leftJoinAndSelect('photo.user', 'user')\n      .leftJoinAndSelect('photo.comments', 'comment')\n      .leftJoinAndSelect('photo.tags', 'tag')\n      .leftJoinAndSelect('photo.favoriteOf', 'favoriteOf')\n      .getMany();\n\n    photos = photos.filter(photo => {\n      if (following.includes(photo.user.id)) {\n        return photo;\n      }\n    });\n\n    photos = photos.map(photo => {\n      let found = false;\n      for (let i = 0; i < userEntity.favPhotos.length; i++) {\n        if (userEntity.favPhotos[i].id === photo.id) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found) {\n        photo['favorite'] = true;\n      } else {\n        photo['favorite'] = false;\n      }\n      return photo;\n    });\n\n    return photos;\n  }\n\n  async getSearchPhotos(\n    filterDto: GetPhotosFilterDto,\n    user: Partial<User>\n  ): Promise<PhotoEntity[]> {\n    const { search, field } = filterDto;\n    const query = this.photoRepository.createQueryBuilder('photo');\n    const userQuery = this.userRepository.createQueryBuilder('user');\n\n    userQuery\n      .where('user.id = :userId', { userId: user.id })\n      .leftJoinAndSelect('user.favPhotos', 'favPhotos');\n\n    const userEntity = await userQuery.getOne();\n\n    query\n      .leftJoinAndSelect('photo.user', 'user')\n      .leftJoinAndSelect('photo.comments', 'comment')\n      .leftJoinAndSelect('photo.tags', 'tag')\n      .leftJoinAndSelect('photo.favoriteOf', 'favoriteOf');\n    // let photos = await query.getMany();\n    // const tags = [];\n    // photos.forEach(photo => photo.tags.forEach(tag => {\n    //   tags.push(tag.content)\n    // }));\n\n    // console.log(search, tags)\n\n    if (search) {\n      query.where(\n        '(photo.description LIKE :search OR user.username LIKE :search OR user.firstName LIKE :search OR user.lastName LIKE :search)',\n        { search: `%${search}%` }\n      );\n    }\n\n    if (field) {\n      if (field === 'favoriteOf') {\n        query\n          .addSelect('COUNT(favoriteOf.id) as favoriteCount')\n          .orderBy('favoriteCount', 'DESC');\n      } else if (field === 'comments') {\n        query\n          .addSelect('COUNT(comment.id) as commentCount')\n          .orderBy('commentCount', 'DESC');\n      }\n    }\n\n    let photos = await query\n      .groupBy('photo.id')\n      .addGroupBy('user.id')\n      .addGroupBy('comment.id')\n      .addGroupBy('tag.id')\n      .addGroupBy('favoriteOf.id')\n      .getMany();\n\n\n    photos = photos.map(photo => {\n      let found = false;\n      for (let i = 0; i < userEntity.favPhotos.length; i++) {\n        if (userEntity.favPhotos[i].id === photo.id) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found) {\n        photo['favorite'] = true;\n      } else {\n        photo['favorite'] = false;\n      }\n      return photo;\n    });\n\n    this.photoRepository.findAndCount()\n\n    return photos;\n  }\n\n  async getPhotoById(id: number): Promise<PhotoEntity> {\n    const found = await this.photoRepository.findOne({\n      where: { id }\n    });\n\n    if (!found) {\n      throw new NotFoundException(`Photo with ID \"${id}\" not found`);\n    }\n\n    return found;\n  }\n\n  async createPhoto(\n    createPhotoDto: CreatePhotoDto,\n    user: Partial<User>\n  ): Promise<PhotoEntity> {\n    return this.photoRepository.createPhoto(createPhotoDto, user);\n  }\n\n  async deletePhoto(id: number, user: Partial<User>): Promise<void> {\n    const result = await this.photoRepository.delete({ id, userId: user.id });\n\n    if (!result.affected) {\n      throw new NotFoundException(`Photo with ID \"${id}\" not found`);\n    }\n  }\n\n  async updatePhotoFavorite(\n    id: number,\n    user: Partial<User>\n  ): Promise<PhotoEntity> {\n    const query = this.userRepository.createQueryBuilder('user');\n\n    query\n      .where('user.id = :userId', { userId: user.id })\n      .leftJoinAndSelect('user.favPhotos', 'favPhotos');\n\n    const userEntity = await query.getOne();\n    const photo = await this.getPhotoById(id);\n\n    let found = false;\n    for (let i = 0; i < userEntity.favPhotos.length; i++) {\n      if (userEntity.favPhotos[i].id === photo.id) {\n        found = true;\n        break;\n      }\n    }\n\n    if (found) {\n      userEntity.favPhotos = userEntity.favPhotos.filter(\n        favPhoto => favPhoto.id !== photo.id\n      );\n    } else {\n      userEntity.favPhotos.push(photo);\n    }\n\n    await userEntity.save();\n    await photo.save();\n\n    return photo;\n  }\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { environment } from '@env/environment';\nimport * as bodyParser from 'body-parser';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.useGlobalPipes(new ValidationPipe());\n  app.enableCors();\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  app.use(bodyParser.json({limit: '50mb'}));\n  app.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\n  const port =  process.env.PORT || environment.server.port;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","module.exports = require(\"@nestjs/core\");","module.exports = require(\"body-parser\");","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CommentsModule } from './comments/comments.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeOrmConfig } from '../config/typeorm.config';\nimport { PhotosModule } from './photos/photos.module';\nimport { AuthModule } from './auth/auth.module';\n\nimport { ServeStaticModule } from '@nestjs/serve-static'; // <- INSERT LINE\nimport { join } from 'path'; // <- INSERT LINE\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'napho-client'),\n      exclude: ['/api*']\n    }),\n    TypeOrmModule.forRoot(typeOrmConfig),\n    AuthModule,\n    CommentsModule,\n    PhotosModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { CommentsController } from './controllers/comments.controller';\nimport { CommentsService } from './services/comments.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CommentRepository } from './data/comment.repository';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CommentRepository]), AuthModule],\n  controllers: [CommentsController],\n  providers: [CommentsService]\n})\nexport class CommentsModule {}\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Patch,\n  Query,\n  UsePipes,\n  ValidationPipe,\n  ParseIntPipe,\n  UseGuards\n} from '@nestjs/common';\nimport { CommentsService } from '../services/comments.service';\nimport { CommentStatus, User } from '@napho/data';\nimport { CreateCommentDto } from '../dto/create-comment.dto';\nimport { GetCommentsFilterDto } from '../dto/get-comments-filter.dto';\nimport { CommentStatusValidationPipe } from '../pipes/comment-status-validation.pipe';\nimport { CommentEntity } from '../data/comment.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GetUser } from '@api/auth/decorators/get-user.decorator';\n\n@Controller(':photoId/comments')\n@UseGuards(AuthGuard())\nexport class CommentsController {\n  constructor(private commentsService: CommentsService) {}\n\n  @Get()\n  getComments(\n    @Query(ValidationPipe) filterDto: GetCommentsFilterDto\n  ): Promise<CommentEntity[]> {\n    return this.commentsService.getComments(filterDto);\n  }\n\n  @Get(':id')\n  getCommentById(\n    @Param('id', ParseIntPipe) id: number\n  ): Promise<CommentEntity> {\n    return this.commentsService.getCommentById(id);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  createComment(\n    @Param('photoId', ParseIntPipe) photoId: number,\n    @Body() createCommentDto: CreateCommentDto,\n    @GetUser() user: Partial<User>\n  ): Promise<CommentEntity> {\n    return this.commentsService.createComment(photoId, createCommentDto, user);\n  }\n\n  @Delete(':id')\n  deleteComment(@Param('id', ParseIntPipe) id: number): Promise<void> {\n    return this.commentsService.deleteComment(id);\n  }\n\n  @Patch(':id/status')\n  updateCommentStatus(\n    @Param('id', ParseIntPipe) id: number,\n    @Body('status', CommentStatusValidationPipe) status: CommentStatus\n  ): Promise<CommentEntity> {\n    return this.commentsService.updateCommentStatus(id, status);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class DataModule {}\n","export * from './models';\nexport * from './users.module';\n","export * from './user.model';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class UsersModule { }\n","export * from './models';\n","export * from './photo.model';\nexport * from './tag.model'\n","export * from './models';\n","export * from './comment.model';\n","import { Photo } from '../../photos';\nimport { User } from '../../users';\n\nexport interface Comment {\n  id: number,\n  photo: Partial<Photo>,\n  photoId: number;\n  content: string,\n  status: CommentStatus,\n  user: Partial<User>,\n  username: string\n}\n\nexport enum CommentStatus {\n  pending = 'pending',\n  approved = 'approved',\n  rejected = 'rejected'\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport interface NaphoDataConfiguration {\n  apiUrl: string;\n}\n\nexport const NAPHO_DATA_CONFIGURATION = new InjectionToken<NaphoDataConfiguration>(\n  'Napho Data configurations'\n);\n","import { IsNotEmpty, IsString } from 'class-validator';\nimport { Photo } from '@napho/data';\n\nexport class CreateCommentDto {\n  @IsNotEmpty()\n  @IsString()\n  content: string;\n}\n","import { CommentStatus } from '@napho/data';\nimport { IsOptional, IsIn, IsNotEmpty } from 'class-validator';\n\nexport class GetCommentsFilterDto {\n  @IsOptional()\n  @IsIn([CommentStatus.pending, CommentStatus.approved, CommentStatus.rejected])\n  status: CommentStatus;\n\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n}\n","import { PipeTransform, BadRequestException } from '@nestjs/common';\nimport { CommentStatus } from '@napho/data';\n\nexport class CommentStatusValidationPipe implements PipeTransform {\n  readonly allowedStatuses = [\n    CommentStatus.pending,\n    CommentStatus.approved,\n    CommentStatus.rejected\n  ];\n\n  transform(value: any) {\n    value = value.toLowerCase();\n\n    if (!this.isStatusValid(value)) {\n      throw new BadRequestException(`\"${value}\" is an invalid status`)\n    }\n\n    return value;\n  }\n\n  private isStatusValid(status: any) {\n    const idx = this.allowedStatuses.indexOf(status);\n    return idx !== -1;\n  }\n}\n","import { Controller, Post, Body, ValidationPipe } from '@nestjs/common';\nimport { AuthCredentialsDto, SignUpCredentialsDto } from '../dto/auth-credentials.dto';\nimport { AuthService } from '../services/auth.service';\nimport { User } from '@napho/data';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('/signup')\n  signUp(@Body(ValidationPipe) signUpCredentialsDto: SignUpCredentialsDto): Promise<User>  {\n    return this.authService.signUp(signUpCredentialsDto);\n  }\n\n\n  @Post('/signin')\n  signIn(@Body(ValidationPipe) authCredentialsDto: AuthCredentialsDto): Promise<User> {\n    return this.authService.signIn(authCredentialsDto);\n  }\n}\n","import {\n  IsString,\n  MinLength,\n  MaxLength,\n  Matches,\n  IsEmail,\n  IsNotEmpty\n} from 'class-validator';\n\nexport class AuthCredentialsDto {\n  @IsString()\n  email: string;\n\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'password too weak'\n  })\n  password: string;\n}\n\nexport class SignUpCredentialsDto {\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  username: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  gender: string;\n\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'password too weak'\n  })\n  password: string;\n}\n","import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '@napho/data';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UserRepository } from '../../users/data/user.repository';\nimport { environment } from '@env/environment';\nimport { Connection } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  private userRepository: UserRepository;\n\n  constructor(private readonly connection: Connection) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET || environment.jwt.secret\n    });\n    this.userRepository = this.connection.getCustomRepository(UserRepository);\n  }\n\n  async validate(user ): Promise<Partial<User>> {\n    const { email } = user;\n    const userFromDatabase = await this.userRepository.findOne({ email });\n\n    if (!userFromDatabase) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n","module.exports = require(\"passport-jwt\");","import {\n  Controller,\n  Query,\n  Get,\n  Param,\n  ParseIntPipe,\n  UseGuards,\n  Patch,\n  Put,\n  Body\n} from '@nestjs/common';\nimport { UserEntity } from '../data/user.entity';\nimport { UsersService } from '../services/users.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GetUser } from '@api/auth/decorators/get-user.decorator';\nimport { User } from '@napho/data';\n\n@Controller('users')\n@UseGuards(AuthGuard())\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get('search')\n  getSearchUsers(@Query('search') search: string): Promise<UserEntity[]> {\n    return this.usersService.getSearchUsers(search);\n  }\n\n  @Get(':id')\n  getUserById(@Param('id', ParseIntPipe) id: number): Promise<UserEntity> {\n    return this.usersService.getUserById(id);\n  }\n\n  @Get(':id/followers')\n  getUserFollowers(@Param('id', ParseIntPipe) id: number): Promise<UserEntity[]> {\n    return this.usersService.getUserFollowers(id);\n  }\n\n  @Get(':id/following')\n  getUserFollowing(@Param('id', ParseIntPipe) id: number): Promise<Partial<User>[]> {\n    return this.usersService.getUserFollowing(id);\n  }\n\n  @Put('follow/:id')\n  followUser(\n    @Param('id', ParseIntPipe) id: number,\n    @GetUser() user: Partial<User>\n  ): Promise<UserEntity> {\n    return this.usersService.followUser(user, id);\n  }\n\n  @Patch()\n  updateUser(\n    @Body('userBody') userBody: Partial<User>,\n    @GetUser() user: Partial<User>\n  ): Promise<UserEntity> {\n    return this.usersService.updateUser(user, userBody);\n  }\n}\n","import { TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { environment } from '@env/environment';\nimport { UserEntity } from '@api/users/data/user.entity';\nimport { CommentEntity } from '@api/comments/data/comment.entity';\nimport { PhotoEntity } from '@api/photos/data/photo.entity';\nimport { TagEntity } from '@api/photos/data/tag.entity';\n\nexport const typeOrmConfig: TypeOrmModuleOptions = {\n  // type: 'postgres',\n  // host: 'localhost',\n  // port: 5432,\n  // username: 'davidmartinez',\n  // password: 'postgres',\n  // database: 'napho_dev',\n  // entities: [UserEntity, CommentEntity, PhotoEntity, TagEntity],\n  // synchronize: true\n  type: environment.databaseConfig.type,\n  host: process.env.RDS_HOSTNAME || environment.databaseConfig.host,\n  port: Number(process.env.RDS_PORT) || environment.databaseConfig.port,\n  username: process.env.RDS_USERNAME || environment.databaseConfig.username,\n  password: process.env.RDS_PASSWORD || environment.databaseConfig.password,\n  database: process.env.RDS_DB_NAME || environment.databaseConfig.database,\n  entities: [UserEntity, CommentEntity, PhotoEntity, TagEntity],\n  synchronize:\n    Boolean(process.env.TYPEORMSYNC) || environment.databaseConfig.synchronize\n};\n","import { Module } from '@nestjs/common';\nimport { PhotosController } from './controllers/photos.controller';\nimport { PhotosService } from './services/photos.service';\nimport { PhotoRepository } from './data/photo.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from '@api/auth/auth.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([PhotoRepository]), AuthModule],\n  controllers: [PhotosController],\n  providers: [PhotosService]\n})\nexport class PhotosModule {}\n","import {\n  Controller,\n  UseGuards,\n  Get,\n  Query,\n  ValidationPipe,\n  Param,\n  ParseIntPipe,\n  Post,\n  UsePipes,\n  Body,\n  Delete,\n  Patch\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PhotosService } from '../services/photos.service';\nimport { PhotoEntity } from '../data/photo.entity';\nimport { User } from '@napho/data';\nimport { GetPhotosFilterDto } from '../dto/get-photos-filter.dto';\nimport { CreatePhotoDto } from '../dto/create-photo.dto';\nimport { GetUser } from '../../auth/decorators/get-user.decorator';\n\n@Controller('photos')\n@UseGuards(AuthGuard())\nexport class PhotosController {\n  constructor(private photosService: PhotosService) {}\n\n  @Get('user/:id')\n  getUserPhotos(\n    @Param('id', ParseIntPipe) id: number,\n    @GetUser() user: Partial<User>\n  ): Promise<PhotoEntity[]> {\n    return this.photosService.getUserPhotos(id, user);\n  }\n\n  @Get('user-fav/:id')\n  getUserFavPhotos(\n    @Param('id', ParseIntPipe) id: number,\n    @GetUser() user: Partial<User>\n  ): Promise<PhotoEntity[]> {\n    return this.photosService.getUserFavPhotos(id, user);\n  }\n\n  @Get('feed')\n  getFeedPhotos(@GetUser() user: Partial<User>): Promise<PhotoEntity[]> {\n    return this.photosService.getFeedPhotos(user);\n  }\n\n  @Get('search')\n  getSearchPhotos(\n    @Query(ValidationPipe) filterDto: GetPhotosFilterDto,\n    @GetUser() user: Partial<User>\n  ): Promise<PhotoEntity[]> {\n    return this.photosService.getSearchPhotos(filterDto, user);\n  }\n\n  @Get(':id')\n  getPhotoById(\n    @Param('id', ParseIntPipe) id: number\n  ): Promise<PhotoEntity> {\n    return this.photosService.getPhotoById(id);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  createPhoto(\n    @Body('photo') createPhotoDto: CreatePhotoDto,\n    @GetUser() user: Partial<User>\n  ): Promise<PhotoEntity> {\n    return this.photosService.createPhoto(createPhotoDto, user);\n  }\n\n  @Delete(':id')\n  deletePhoto(\n    @Param('id', ParseIntPipe) id: number,\n    @GetUser() user: Partial<User>\n  ): Promise<void> {\n    return this.photosService.deletePhoto(id, user);\n  }\n\n  @Patch(':id/favorite')\n  updatePhotoFavorite(\n    @Param('id', ParseIntPipe) id: number,\n    @GetUser() user: Partial<User>\n  ): Promise<PhotoEntity> {\n    return this.photosService.updatePhotoFavorite(id, user);\n  }\n}\n","import { IsOptional, IsNotEmpty } from 'class-validator';\n\nexport class GetPhotosFilterDto {\n  @IsOptional()\n  search: string;\n\n  @IsOptional()\n  @IsNotEmpty()\n  field: string;\n}\n","import { IsNotEmpty, IsArray, IsString, IsOptional } from 'class-validator';\n\nexport class CreatePhotoDto {\n  @IsOptional()\n  @IsString()\n  description: string;\n\n  @IsOptional()\n  tags: string[];\n\n  imageUrl: string;\n}\n","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"path\");"],"sourceRoot":""}